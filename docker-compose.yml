services:
  bumilangit-api:
    container_name: bumilangit-api
    build:
      context: .
      dockerfile: ./docker/${NODE_ENV}/Dockerfile
    image: bumilangit-api:latest
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: bumilangit-apiDB
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - ./package.json:/opt/package.json
      - ./package-lock.json:/opt/package-lock.json

      - ./.env:/opt/app/.env
      - ./public/uploads:/opt/app/public/uploads
    ports:
      - "1337:1337"
    networks:
      - bumilangit-api
    depends_on:
      - bumilangit-apiDB

  bumilangit-apiDB:
    container_name: bumilangit-apiDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: postgres:14.5-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - bumilangit-api-data:/var/lib/postgresql/data/ #using a volume
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder

    ports:
      - "5433:5432"
    networks:
      - bumilangit-api

  bumilangit-apiAdminer:
    container_name: bumilangit-apiAdminer
    image: adminer
    restart: unless-stopped
    ports:
      - "9090:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=bumilangit-apiDB
    networks:
      - bumilangit-api
    depends_on:
      - bumilangit-apiDB

volumes:
  bumilangit-api-data:

networks:
  bumilangit-api:
    name: Bumilangit-api
    driver: bridge
